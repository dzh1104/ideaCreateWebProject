<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!--配置数据库信息(替代Mybatis的配置文件)-->
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="${driver}" />
        <property name="url" value="${url}" />
        <property name="username" value="${username}" />
        <property name="password" value="${password}" />
    </bean>

    <!--spring引入外部配置文件和mybatis引入外部配置文件的不同: 见neteaseMybatis-->
    <bean id="config" class="org.springframework.beans.factory.config.PreferencesPlaceholderConfigurer">
        <property name="locations">
            <array>
                <value>classpath:db.properties</value>
            </array>
        </property>
    </bean>

    <!--
        Spring整合MyBatis
            思路: SqlSessionFactory -> SqlSession -> StudentMapper -> CRUD
            可以发现，MyBatis最终是通过SqlSessionFactory来操作数据库，
            Spring整合MyBatis，其实就是 将 MyBatis 的 SqlSessionFactory 交给 Spring

        SM整合步骤:
            1.添加jar包
            2.类(com.netease.entity.Student) - 表(netease - student)
            3.mybatis配置文件 mybatis-config.xml
            4.通过mapper.xml将 类 表 简历映射关系
            5.之前使用mybatis: config.xml ->
            SqlSessionFactory，现在整合的时候，需要通过Spring管理SqlSessionFactory，因此产生SqlSessionFactory所需要的数据库信息，不在放入mybatis
            的配置文件中了，而是需要放在spring配置文件中
    -->
</beans>